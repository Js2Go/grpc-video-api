// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: proto/video.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetVideoRequest) Reset() {
	*x = GetVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_video_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoRequest) ProtoMessage() {}

func (x *GetVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_video_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoRequest.ProtoReflect.Descriptor instead.
func (*GetVideoRequest) Descriptor() ([]byte, []int) {
	return file_proto_video_proto_rawDescGZIP(), []int{0}
}

func (x *GetVideoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateVideoReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateVideoReplay) Reset() {
	*x = CreateVideoReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_video_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVideoReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVideoReplay) ProtoMessage() {}

func (x *CreateVideoReplay) ProtoReflect() protoreflect.Message {
	mi := &file_proto_video_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVideoReplay.ProtoReflect.Descriptor instead.
func (*CreateVideoReplay) Descriptor() ([]byte, []int) {
	return file_proto_video_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVideoReplay) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type VideoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Note  string `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	Pic   string `protobuf:"bytes,4,opt,name=pic,proto3" json:"pic,omitempty"`
	Video string `protobuf:"bytes,5,opt,name=video,proto3" json:"video,omitempty"`
}

func (x *VideoInfo) Reset() {
	*x = VideoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_video_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoInfo) ProtoMessage() {}

func (x *VideoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_video_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoInfo.ProtoReflect.Descriptor instead.
func (*VideoInfo) Descriptor() ([]byte, []int) {
	return file_proto_video_proto_rawDescGZIP(), []int{2}
}

func (x *VideoInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VideoInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoInfo) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *VideoInfo) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *VideoInfo) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

var File_proto_video_proto protoreflect.FileDescriptor

var file_proto_video_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2b, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6d, 0x0a, 0x09, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x32, 0x8a, 0x01, 0x0a, 0x05, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x12, 0x3d, 0x0a, 0x0f, 0x52, 0x70, 0x63, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x12, 0x52, 0x70, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x79, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_video_proto_rawDescOnce sync.Once
	file_proto_video_proto_rawDescData = file_proto_video_proto_rawDesc
)

func file_proto_video_proto_rawDescGZIP() []byte {
	file_proto_video_proto_rawDescOnce.Do(func() {
		file_proto_video_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_video_proto_rawDescData)
	})
	return file_proto_video_proto_rawDescData
}

var file_proto_video_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_video_proto_goTypes = []interface{}{
	(*GetVideoRequest)(nil),   // 0: proto.GetVideoRequest
	(*CreateVideoReplay)(nil), // 1: proto.CreateVideoReplay
	(*VideoInfo)(nil),         // 2: proto.VideoInfo
}
var file_proto_video_proto_depIdxs = []int32{
	0, // 0: proto.Video.RpcGetVideoInfo:input_type -> proto.GetVideoRequest
	2, // 1: proto.Video.RpcCreateVideoInfo:input_type -> proto.VideoInfo
	2, // 2: proto.Video.RpcGetVideoInfo:output_type -> proto.VideoInfo
	1, // 3: proto.Video.RpcCreateVideoInfo:output_type -> proto.CreateVideoReplay
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_video_proto_init() }
func file_proto_video_proto_init() {
	if File_proto_video_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_video_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_video_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVideoReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_video_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_video_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_video_proto_goTypes,
		DependencyIndexes: file_proto_video_proto_depIdxs,
		MessageInfos:      file_proto_video_proto_msgTypes,
	}.Build()
	File_proto_video_proto = out.File
	file_proto_video_proto_rawDesc = nil
	file_proto_video_proto_goTypes = nil
	file_proto_video_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VideoClient is the client API for Video service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VideoClient interface {
	RpcGetVideoInfo(ctx context.Context, in *GetVideoRequest, opts ...grpc.CallOption) (*VideoInfo, error)
	RpcCreateVideoInfo(ctx context.Context, in *VideoInfo, opts ...grpc.CallOption) (*CreateVideoReplay, error)
}

type videoClient struct {
	cc grpc.ClientConnInterface
}

func NewVideoClient(cc grpc.ClientConnInterface) VideoClient {
	return &videoClient{cc}
}

func (c *videoClient) RpcGetVideoInfo(ctx context.Context, in *GetVideoRequest, opts ...grpc.CallOption) (*VideoInfo, error) {
	out := new(VideoInfo)
	err := c.cc.Invoke(ctx, "/proto.Video/RpcGetVideoInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *videoClient) RpcCreateVideoInfo(ctx context.Context, in *VideoInfo, opts ...grpc.CallOption) (*CreateVideoReplay, error) {
	out := new(CreateVideoReplay)
	err := c.cc.Invoke(ctx, "/proto.Video/RpcCreateVideoInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VideoServer is the server API for Video service.
type VideoServer interface {
	RpcGetVideoInfo(context.Context, *GetVideoRequest) (*VideoInfo, error)
	RpcCreateVideoInfo(context.Context, *VideoInfo) (*CreateVideoReplay, error)
}

// UnimplementedVideoServer can be embedded to have forward compatible implementations.
type UnimplementedVideoServer struct {
}

func (*UnimplementedVideoServer) RpcGetVideoInfo(context.Context, *GetVideoRequest) (*VideoInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcGetVideoInfo not implemented")
}
func (*UnimplementedVideoServer) RpcCreateVideoInfo(context.Context, *VideoInfo) (*CreateVideoReplay, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcCreateVideoInfo not implemented")
}

func RegisterVideoServer(s *grpc.Server, srv VideoServer) {
	s.RegisterService(&_Video_serviceDesc, srv)
}

func _Video_RpcGetVideoInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVideoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServer).RpcGetVideoInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Video/RpcGetVideoInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServer).RpcGetVideoInfo(ctx, req.(*GetVideoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Video_RpcCreateVideoInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServer).RpcCreateVideoInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Video/RpcCreateVideoInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServer).RpcCreateVideoInfo(ctx, req.(*VideoInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _Video_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Video",
	HandlerType: (*VideoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RpcGetVideoInfo",
			Handler:    _Video_RpcGetVideoInfo_Handler,
		},
		{
			MethodName: "RpcCreateVideoInfo",
			Handler:    _Video_RpcCreateVideoInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/video.proto",
}
